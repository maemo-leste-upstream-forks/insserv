#! /bin/sh /usr/share/dpatch/dpatch-run
## 20_path_at_runtime.dpatch by Petter Reinholdtsen
## Updated for insserv v1.10 by PEtter Reinholdtsen

Make it possible to set the path at runtime, to make it easier to
write test suites.

@DPATCH@
diff -urNad insserv-1.10.0~/insserv.8 insserv-1.10.0/insserv.8
--- insserv-1.10.0~/insserv.8	2008-01-07 17:21:15.000000000 +0100
+++ insserv-1.10.0/insserv.8	2008-01-07 17:21:36.000000000 +0100
@@ -15,16 +15,22 @@
 .\"
 .B insserv
 .RB [ \-v ]
+.RB [ \-c\ <config> ]
+.RB [ \-p\ <path> ]
 .RB [ \-d ]
 .RB [ \-f ]
 .RI [[ / ] path/to/init.d/ ] script \ ...
 .PP
 .B insserv
 .RB [ \-v ]
+.RB [ \-c\ <config> ]
+.RB [ \-p\ <path> ]
 .RI [[ / ] path/to/init.d/ ] script [ ,start=<lvl1> [ ,<lvl2> ]]\ ...
 .PP
 .B insserv
 .RB [ \-v ]
+.RB [ \-c\ <config> ]
+.RB [ \-p\ <path> ]
 .B \-r
 .RB [ \-d ]
 .RB [ \-f ]
@@ -168,12 +174,19 @@
 this facility will be grouped into one starting order.
 .\"
 .SH OPTIONS
-Currently there are only four options for
+Currently there are only five options for
 .BR insserv .
 .TP
 .BR \-v ,\  \-\-verbose
 Write out what is currently going on.
 .TP
+.BR \-c\ <config>,\  \-\-config\ <config>
+Specify path to the insserv.conf file and the insserv.conf.d
+directory.  Useful for testing.
+.TP
+.BR \-p\ <path>,\  \-\-path\ <path>
+Specify path to init.d directory.  Useful for testing.
+.TP
 .BR \-n ,\  \-\-dryrun
 Do not update symlinks.
 .TP
diff -urNad insserv-1.10.0~/insserv.c insserv-1.10.0/insserv.c
--- insserv-1.10.0~/insserv.c	2008-01-07 17:21:15.000000000 +0100
+++ insserv-1.10.0/insserv.c	2008-01-07 17:24:45.000000000 +0100
@@ -1582,19 +1582,19 @@
     return 1;
 }
 
-static void scan_conf()
+static void scan_conf(const char *file)
 {
     struct dirent** namelist = (struct dirent**)0;
     char path[PATH_MAX+1];
     int n;
 
-    n = snprintf(&path[0], sizeof(path), "%s%s", root ? root : "", INSCONF);
+    n = snprintf(&path[0], sizeof(path), "%s%s", root ? root : "", file);
     if (n >= sizeof(path) || n < 0)
 	error("snprintf(): %s\n", strerror(errno));
 
     scan_conf_file(path);
 
-    n = snprintf(&path[0], sizeof(path), "%s%s.d", root ? root : "", INSCONF);
+    n = snprintf(&path[0], sizeof(path), "%s%s.d", root ? root : "", file);
     if (n >= sizeof(path) || n < 0)
 	error("snprintf(): %s\n", strerror(errno));
 
@@ -1666,10 +1666,12 @@
 static struct option long_options[] =
 {
     {"verbose",	0, (int*)0, 'v'},
+    {"config",	1, (int*)0, 'c'},
     {"dryrun",	0, (int*)0, 'n'},
     {"default",	0, (int*)0, 'd'},
     {"remove",	0, (int*)0, 'r'},
     {"force",	0, (int*)0, 'f'},
+    {"path",	1, (int*)0, 'p'},
     {"help",	0, (int*)0, 'h'},
     { 0,	0, (int*)0,  0 },
 };
@@ -1682,6 +1684,8 @@
     printf("  -r, --remove     Remove the listed scripts from all runlevels.\n");
     printf("  -f, --force      Ignore if a required service is missed.\n");
     printf("  -v, --verbose    Provide information on what is being done.\n");
+    printf("  -p <path>, --path <path>  Path to replace " INITDIR ".\n");
+    printf("  -c <config>, --config <config>  Path to config file.\n");
     printf("  -n, --dryrun     Do not change the system, only talk about it.\n");
     printf("  -d, --default    Use default runlevels a defined in the scripts\n");
 }
@@ -1697,6 +1701,7 @@
     struct stat st_script;
     char * argr[argc];
     char * path = INITDIR;
+    char * insconf = INSCONF;
     int runlevel, c;
     boolean del = false;
     boolean defaults = false;
@@ -1707,8 +1712,11 @@
     for (c = 0; c < argc; c++)
 	argr[c] = (char*)0;
 
-    while ((c = getopt_long(argc, argv, "dfrhvn", long_options, (int *)0)) != -1) {
+    while ((c = getopt_long(argc, argv, "c:dfrhvnp:", long_options, (int *)0)) != -1) {
 	switch (c) {
+	    case 'c':
+		insconf = optarg;
+		break;
 	    case 'd':
 		defaults = true;
 		break;
@@ -1725,6 +1733,9 @@
 		verbose = true;
 		dryrun = true;
 		break;
+	    case 'p':
+		path = optarg;
+		break;
 	    case '?':
 		error("For help use: %s -h\n", myname);
 	    case 'h':
@@ -1833,7 +1844,7 @@
     /*
      * Scan and set our configuration for virtual services.
      */
-    scan_conf();
+    scan_conf(insconf);
 
     /*
      * Initialize the regular scanner for the scripts.
