#! /bin/sh /usr/share/dpatch/dpatch-run
## 60_disable_cfgfilter_stat.dpatch by Kel Modderman <kel@otaku42.de>
##
## DP: Goal: Make sure /etc/insserv.conf.d/* are used.
## DP:
## DP: Fixes: none
## DP:
## DP: Status: Applied upstream
## DP:
## DP: Notes: The call to stat in scandir filter is flawed, it does not stat
## DP: full path to file and prevents /etc/insserv.conf.d/* from being
## DP: used. The filter function is called at one other location, and a
## DP: stat + IS_REG() test is done before that.
## DP: test_insserv_conf_d test suite case exposes this situation.

@DPATCH@
diff -urNad insserv~/insserv.c insserv/insserv.c
--- insserv~/insserv.c	2008-05-15 01:11:53.000000000 +1000
+++ insserv/insserv.c	2008-05-15 01:13:36.000000000 +1000
@@ -1810,11 +1810,6 @@
 	return 0;
     if ((*name == '.') && ((*(name+1) == '\0') || (*(name+1) == '.')))
 	return 0;
-    else {
-	struct stat st;
-	if ((stat(name,&st) < 0) || !S_ISREG(st.st_mode))
-	    return 0;
-    }
     if ((end = strrchr(name, '.'))) {
 	end++;
 	if (!strncmp(end, "rpm", 3)	|| /* .rpmorig, .rpmnew, .rmpsave, ... */
@@ -1868,6 +1863,7 @@
     n = scandir(path, &namelist, cfgfile_filter, alphasort);
     if(n > 0) {
 	while(n--) {
+	    struct stat st;
 	    char buf[PATH_MAX+1];
 	    int r;
 
@@ -1875,6 +1871,9 @@
 	    if (r >= (int)sizeof(buf) || r < 0)
 		error("snprintf(): %s\n", strerror(errno));
 
+	    if ((stat(buf, &st) < 0) || !S_ISREG(st.st_mode))
+	        continue;
+
 	    scan_conf_file(buf);
 
 	    free(namelist[n]);
