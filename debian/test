#!/bin/sh
set -e
tmpdir=`pwd`/testdir
initddir=$tmpdir/init.d
insserv=`pwd`/insserv
overridedir=$tmpdir/insserv/override
retval=0
mkdir -p $initddir
insserv_reg() {
    script=$initddir/$1
    $insserv $debug -p $initddir -o $overridedir $script
}
insertscript() {
    scriptname=$1
    script=$initddir/$scriptname
    cat > $script
    chmod a+rx $script
    insserv_reg $scriptname
}
test_order() {
check_order() {
    runlevel=$1
    script1=$2
    script2=$3
    order="$(echo $(cd $tmpdir/rc$runlevel.d/; ls *$script1 *$script2 2>/dev/null | sed 's/[SK]..//') )"
    if [ "$order" != "$script1 $script2" ] ; then
	echo "error: incorrect $runlevel sequence $script1 not before $script2"
	retval=1
    fi
}

# Test another fake loop.  This one should work, as it is possible to
# install the two scripts in sequence because one of the dependencies
# are optional.  It does not with insserv today.
rm -rf $initddir
mkdir -p $initddir

insertscript startsecond <<'EOF' || true
### BEGIN INIT INFO
# Provides:          startsecond
# Required-Start:
# Required-Stop:
# Should-Start:     startfirst
# Default-Start:     S
# Default-Stop:      6
### END INIT INFO
EOF

insertscript startfirst <<'EOF' || true
### BEGIN INIT INFO
# Provides:          startfirst
# Required-Start:
# Required-Stop:    startsecond
# Should-Start:   
# Default-Start:     S
# Default-Stop:      6
### END INIT INFO
EOF

(cd $tmpdir && ls *)

check_order S startfirst startsecond
check_order 6 startsecond startfirst

rm -rf $tmpdir

exit $retval
