#!/bin/sh

set -e

. /usr/share/debconf/confmodule

db_version 2.0

flagfile=/var/lib/insserv/using-insserv

# Based on code from dash postinst
check_divert() {
    package=insserv
    div=$(dpkg-divert --list $2)
    distrib=${4:-$2.distrib}
    case "$1" in
    status) # Return true if the divert is in effect
        if [ -n "$div" ] && [ -z "${div%%*by $package}" ]; then
	    :
	else
	    false
	fi
    esac
}

############################## Ask the question (insserv.config) #################################
#
# insserv.config moved here to be able to call update-bootsystem-insserv
#
if [ "$1" = configure ] && [ -z "$2" ]; then
    set +e
    db_fget insserv/enable seen
    err=$?
    set -e

    case $err in
       0)
           if [ true = "$RET" ]; then
               db_get insserv/enable
               if [ true = "$RET" ] && \
                   ! check_divert status /usr/sbin/update-rc.d \
                   /usr/sbin/update-rc.d-insserv ; then
                   # debconf value has been seen and the value is true, but the
                   # on disk state is false. No previous package version has
                   # given as second argument, therefore the value must have
                   # been preseeded before initial installation. Exit.
                   exit
               fi
           fi
           ;;
       10)
           # insserv/enable seen does not exist
           ;;
       *)
           echo "db_fget exited with $err" >&2
           exit $err
           ;;
    esac
fi


# Only update the default from the status on disk if we are already
# installed, and not on first time install, to allow preseeding.
if [ -e /usr/sbin/update-rc.d-insserv ] ; then
    if check_divert status /usr/sbin/update-rc.d \
	/usr/sbin/update-rc.d-insserv ; then
	db_set insserv/enable true
    elif update-bootsystem-insserv check ; then
	# No problems with the current boot scripts, should be safe to enable
	db_set insserv/enable true
    else
	db_set insserv/enable false
    fi
fi

db_input medium insserv/enable || [ $? -eq 30 ]
db_go || true
############################ Process the qeustion (insserv.config) ###############################

case "$1" in
    configure)
	if check_divert status /usr/sbin/update-rc.d \
	    /usr/sbin/update-rc.d-insserv ; then
	    enabled=true
	fi

	db_get insserv/enable || true
	if [ true = "$RET" ] && [ true != "$enabled" ]; then
	    # Enable it, as it was not enabled already.
	    # Reorder the boot sequence, and divert update-rc.d if
	    # it worked
	    if update-bootsystem-insserv ; then
		echo "success: Boot system successfully converted"
		: # All OK
	    else
		echo "error: Unable to enable dependency based boot system."
	    fi
	elif [ true != "$RET" ] ; then
	    if [ true = "$enabled" ] || [ -f $flagfile ]; then
		echo "info: Disabling dependency based boot system"
	        # Revert to old boot system if possible
		update-bootsystem-insserv restore
	    fi
	fi
	;;
    *)
	;;
esac

db_stop

#
# This flag file was used until version 1.09.0-11, where the system
# was converted to use the existence of the update-rc.d diversion as a
# flag to detect if insserv is enabled.
#
if dpkg --compare-versions "$PREV_VER" lt "1.09.0-11" ; then
	rm -f /etc/update-rc.d-insserv
fi

#DEBHELPER#
