#! /bin/sh /usr/share/dpatch/dpatch-run
## 43_shutdown.dpatch by Otavio Salvador and Petter Reinholdtsen

Fix the handling of stop scripts and the shutdown sequence.

@DPATCH@
diff -urNad insserv~/insserv.c insserv/insserv.c
--- insserv~/insserv.c	2008-01-04 11:22:10.000000000 +0100
+++ insserv/insserv.c	2008-01-04 11:22:11.000000000 +0100
@@ -464,14 +464,19 @@
 /*
  * This helps us to work out the current symbolic link structure
  */
-static serv_t * current_structure(const char *const this, const char order, const int runlvl)
+static serv_t * current_structure(const char *const this, const char order, const int runlvl, const char type)
 {
     serv_t * serv = addserv(this);
 
     if (serv->order < order)
 	serv->order = order;
 
-    serv->lvls |= map_runlevel_to_lvl(runlvl);
+    if ('S' == type)
+	serv->lvls |= map_runlevel_to_lvl(runlvl);
+#ifndef SUSE
+    else
+        serv->lvlk |= map_runlevel_to_lvl(runlvl);
+#endif /* SUSE */
 
     return serv;
 }
@@ -1392,11 +1397,17 @@
 	while ((d = readdir(rcdir)) != NULL) {
 	    char * ptr = d->d_name;
 	    char order = 0;
+ 	    char type;
 	    char* begin = (char*)NULL; /* Remember address of ptr handled by strsep() */
 	    boolean lsb;
 
-	    if (*ptr != 'S')
+	    if (*ptr != 'S'
+#ifndef SUSE
+                && *ptr != 'K'
+#endif /* SUSE */
+                )
 		continue;
+ 	    type = *ptr;
 	    ptr++;
 
 	    if (strspn(ptr, "0123456789") < 2)
@@ -1420,7 +1431,7 @@
 		    warn("script %s provides system facility %s, skipped!\n", d->d_name, token);
 		    continue;
 		}
-		service = current_structure(token, order, runlevel);
+		service = current_structure(token, order, runlevel, type);
 
 		if (service->opts & SERV_KNOWN)
 		    continue;
@@ -2294,7 +2305,10 @@
 	     */
 	    if (script_inf.default_stop && script_inf.default_stop != empty) {
 		if (service && !del)
+		  {
 		    service->lvlk = str2lvl(script_inf.default_stop);
+		    runlevels(token, script_inf.default_stop);
+		  }
 	    }
 #endif /* not SUSE */
 	}
@@ -2571,9 +2585,13 @@
 	}
 
 	while (listscripts(&script, seek)) {
-	    const boolean stop = notincluded(script, runlevel);
 	    const boolean this = chkfor(script, argv, argc);
 	    const serv_t *serv = findserv(getprovides(script));
+	    const boolean stop = (notincluded(script, runlevel) 
+#ifndef SUSE
+				  || (serv->lvlk & lvl))
+#endif /* not SUSE */
+	      ;
 	    const char mode = (stop ? 'K' : 'S');
 	    int order = getorder(script);
 	    boolean found;
@@ -2597,6 +2615,10 @@
 		order = (maxorder + 1) - order;
 	    }
 
+	    if (!(serv->lvls & lvl) && !(serv->lvlk & lvl))
+		continue;				/* We aren't suppose to be on this runlevel */
+
+
 	    sprintf(olink, "../init.d/%s", script);
 	    sprintf(nlink, "%c%.2d%s", mode, order, script);
 
diff -urNad insserv~/listing.c insserv/listing.c
--- insserv~/listing.c	2008-01-04 11:22:10.000000000 +0100
+++ insserv/listing.c	2008-01-04 11:22:11.000000000 +0100
@@ -536,7 +536,7 @@
 {
     dir_t * dir = providedir(this);
 
-    dir->lvl = str2lvl(lvl);
+    dir->lvl |= str2lvl(lvl);
 }
 
 /*
